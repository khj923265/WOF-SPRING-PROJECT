<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.wof.mapper.MemberMapper">

    <resultMap id="memberMap" type="org.wof.domain.MemberVO">
        <id property="userid" column="userid"/>
        <result property="member_no" column="member_no"/>
        <result property="userid" column="userid"/>
        <result property="userpw" column="userpw"/>
        <result property="real_name" column="real_name"/>
        <result property="userphone" column="userphone"/>
        <result property="auth" column="auth"/>
        <result property="total_point" column="total_point"/>
        <collection property="authList" resultMap="authMap">
        </collection>
    </resultMap>

    <resultMap id="authMap" type="org.wof.domain.AuthVO">
        <result property="userid" column="userid"/>
        <result property="auth" column="auth"/>
    </resultMap>

    <select id="read" resultMap="memberMap">
        select mem.member_no, mem.userid, userpw, real_name, userphone, auth.auth, total_point from member mem left outer join auth auth
               on mem.userid = auth.userid where mem.userid = #{username}
    </select>

    <insert id="signUp" parameterType="org.wof.domain.MemberVO">
        <selectKey keyProperty="member_no" resultType="String" order="BEFORE">
            select 'member'||member_seq.nextval FROM DUAL
        </selectKey>
        insert into member (member_no, userid, userpw, real_name, userphone, auth)
        values (#{member_no}, #{userid}, #{userpw}, #{real_name}, #{userphone}, #{auth})
    </insert>

    <insert id="insertAuth" parameterType="org.wof.domain.AuthVO">
        insert into auth (userid, auth)
        values (#{userid}, #{auth})
    </insert>

    <select id="checkId" parameterType="String" resultType="String">
        select count(*) from member where userid = #{userid}
    </select>

    <select id="memberNo" parameterType="String" resultType="String">
        select member_no from member where userid = #{userid}
    </select>

    <select id="partnersInfo" parameterType="String" resultType="org.wof.domain.PartnersVO">
        select * from partners where member_no = #{member_no}
    </select>

    <insert id="signUpPartners" parameterType="org.wof.domain.MemberVO">
        insert into partners (member_no) values (#{member_no})
    </insert>
    <select id="clientInfo" parameterType="String" resultType="org.wof.domain.ClientVO">
        select * from client where member_no = #{member_no}
    </select>
    <insert id="signUpClient" parameterType="org.wof.domain.MemberVO">
        insert into client (member_no) values (#{member_no})
    </insert>
    <select id="checkPw" parameterType="String" resultType="String">
        select userpw from member where member_no = #{member_no}
    </select>
    <select id="checkPw2" parameterType="String" resultType="String">
        select userpw from member where userid = #{userid}
    </select>
    <update id="Withdrawal" parameterType="org.wof.domain.MemberVO">
        update member set status=#{status}, signout_date=sysdate where userid = #{userid}
    </update>
    <update id="userPhoneUpdate" parameterType="org.wof.domain.MemberVO">
        update member set userphone=#{userphone} where member_no = #{member_no}
    </update>
    <update id="partnersUpdate2" parameterType="org.wof.domain.PartnersVO">
        update partners set skill=#{skill}, prefered_area=#{prefered_area}, hashtag=#{hashtag} where member_no = #{member_no}
    </update>
    <update id="partnersUpdate3" parameterType="org.wof.domain.MemberVO">
        update member set userpw=#{userpw}, userphone=#{userphone} where member_no = #{member_no}
    </update>
    <select id="loginIdCheck" parameterType="String" resultType="String">
        select status from member where userid = #{userid}
    </select>
    <update id="loginSysdate" parameterType="String">
        update member set login_date=sysdate where userid=#{userid}
    </update>
    <update id="clientUpdate2" parameterType="org.wof.domain.ClientVO">
        update client set name =#{name}, business_register_no=#{business_register_no},
        tel=#{tel}, address1=#{address1}, address2=#{address2},
        profile=#{profile} where member_no=#{member_no}
    </update>
    <update id="clientUpdate3" parameterType="org.wof.domain.MemberVO">
        update member set userpw=#{userpw}, userphone=#{userphone} where member_no = #{member_no}
    </update>
    <select id="projectProfileList" parameterType="string" resultType="org.wof.domain.ProjectProfileVO">
        select no,userid, name, skill, field, responsibilities, to_char(startdate,'YYYY-MM-DD')"startdate",
        to_char(enddate,'YYYY-MM-DD')"enddate"
         from PROJECT_PROFILE where userid = #{userid}
    </select>
    <insert id="projectProfileInsert" parameterType="org.wof.domain.ProjectProfileVO">
        insert into project_profile (no,userid, name, skill, field, responsibilities, startdate, enddate)
         values (project_profile_seq.nextval,#{userid},#{name},#{skill},#{field},#{responsibilities},#{startDateFormat},#{endDateFormat})
    </insert>
    <select id="projectProfileInfo" parameterType="String" resultType="org.wof.domain.ProjectProfileVO">
        select no,userid, name, skill, field, responsibilities, to_char(startdate,'YYYY-MM-DD')"startdate",
        to_char(enddate,'YYYY-MM-DD')"enddate"
         from project_profile where no = #{no}
    </select>
    <update id="profileupdate" parameterType="org.wof.domain.PartnersVO">
        update partners set profile = #{profile} where member_no = #{member_no}
    </update>
    <delete id="projectProfileDelete" parameterType="String">
        delete from project_profile where no = #{no}
    </delete>
    <insert id="kakaoSignup" parameterType="org.wof.domain.MemberVO">
        <selectKey keyProperty="member_no" resultType="String" order="BEFORE">
            select 'kakao'||kakao_seq.nextval FROM DUAL
        </selectKey>
        insert into member (member_no, userid, userpw, real_name, auth)
        values (#{member_no}, #{userid}, #{userpw}, #{real_name}, #{auth})
    </insert>
    <select id="kakaoIdCheck" parameterType="String" resultType="String">
        select member_no from member where userid = #{userid}
    </select>
    <select id="findIdCount" parameterType="org.wof.domain.MemberVO" resultType="int">
        select count(*) from member where real_name = #{real_name} and userphone = #{userphone}
    </select>
    <select id="findIdForm" parameterType="org.wof.domain.MemberVO" resultType="String">
        select userid from member where real_name = #{real_name} and userphone = #{userphone}
    </select>
    <select id="findPwCount" parameterType="org.wof.domain.MemberVO" resultType="int">
        select count(*) from member where userid = #{userid} and real_name = #{real_name} and userphone = #{userphone}
    </select>
    <update id="setEncodePassword" parameterType="org.wof.domain.MemberVO">
        update member set userpw = #{userpw} where userid = #{userid}
    </update>
    <update id="projectProfileUpdate" parameterType="org.wof.domain.ProjectProfileVO">
        update project_profile set name = #{name}, skill = #{skill}, responsibilities = #{responsibilities},
            field = #{field}, startdate = #{startDateFormat}, enddate = #{endDateFormat} where no = #{no}
    </update>
    <update id="meetingUpdate" parameterType="org.wof.domain.MeetVO">
        update meet set meet_contents = #{meet_contents},
        meet_datetime = #{meet_datetime} where meet_req_mem = #{meet_req_mem}
    </update>
    <select id="meetInfo" parameterType="String" resultType="org.wof.domain.MeetVO">
        select * from meet where meet_id = #{meet_id}
    </select>



</mapper>